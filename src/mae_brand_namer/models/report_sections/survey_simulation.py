from pydantic import BaseModel, Field
from typing import Dict, List

class RawQualitativeFeedback(BaseModel):
    relevance: str = Field(..., description="Relevance of the brand name")
    memorability: str = Field(..., description="Memorability of the brand name")
    pronunciation: str = Field(..., description="Ease of pronunciation of the brand name")
    visual_imagery: str = Field(..., description="Visual imagery evoked by the brand name")
    differentiation: str = Field(..., description="Differentiation from competitors")
    emotional_impact: str = Field(..., description="Emotional impact of the brand name")
    first_impression: str = Field(..., description="First impression of the brand name")

class CurrentBrandRelationships(BaseModel):
    sap: str = Field(..., description="Relationship with SAP")
    oracle: str = Field(..., description="Relationship with Oracle")
    microsoft: str = Field(..., description="Relationship with Microsoft")
    salesforce: str = Field(..., description="Relationship with Salesforce")
    aws: str = Field(..., description="Relationship with AWS")
    gcp: str = Field(..., description="Relationship with GCP")

class SurveySimulationDetails(BaseModel):
    industry: str = Field(..., description="Industry of the respondent")
    job_title: str = Field(..., description="Job title of the respondent")
    seniority: str = Field(..., description="Seniority level of the respondent")
    department: str = Field(..., description="Department of the respondent")
    reports_to: str = Field(..., description="Reporting structure of the respondent")
    pain_points: str = Field(..., description="Pain points faced by the respondent")
    company_name: str = Field(..., description="Name of the company")
    company_revenue: int = Field(..., description="Revenue of the company")
    education_level: str = Field(..., description="Education level of the respondent")
    online_behavior: str = Field(..., description="Online behavior of the respondent")
    budget_authority: str = Field(..., description="Budget authority of the respondent")
    event_attendance: str = Field(..., description="Events attended by the respondent")
    strategic_ranking: int = Field(..., description="Strategic ranking of the respondent")
    business_chemistry: str = Field(..., description="Business chemistry of the respondent")
    social_media_usage: str = Field(..., description="Social media usage of the respondent")
    information_sources: str = Field(..., description="Information sources used by the respondent")
    purchasing_behavior: str = Field(..., description="Purchasing behavior of the respondent")
    years_of_experience: int = Field(..., description="Years of experience of the respondent")
    barriers_to_adoption: str = Field(..., description="Barriers to adoption faced by the respondent")
    generation_age_range: str = Field(..., description="Generation age range of the respondent")
    goals_and_challenges: str = Field(..., description="Goals and challenges of the respondent")
    decision_making_style: str = Field(..., description="Decision-making style of the respondent")
    emotional_association: str = Field(..., description="Emotional association with the brand name")
    personality_fit_score: int = Field(..., description="Personality fit score of the respondent")
    values_and_priorities: str = Field(..., description="Values and priorities of the respondent")
    buying_group_structure: str = Field(..., description="Buying group structure of the respondent")
    company_size_employees: str = Field(..., description="Company size in terms of employees")
    interaction_with_brand: str = Field(..., description="Interaction with the brand")
    frustrations_annoyances: str = Field(..., description="Frustrations and annoyances of the respondent")
    influence_within_company: str = Field(..., description="Influence within the company")
    raw_qualitative_feedback: RawQualitativeFeedback = Field(..., description="Raw qualitative feedback")
    content_consumption_habits: str = Field(..., description="Content consumption habits of the respondent")
    current_brand_relationships: CurrentBrandRelationships = Field(..., description="Current brand relationships")
    final_survey_recommendation: str = Field(..., description="Final survey recommendation")
    qualitative_feedback_summary: str = Field(..., description="Qualitative feedback summary")
    competitor_benchmarking_score: int = Field(..., description="Competitor benchmarking score")
    brand_promise_perception_score: int = Field(..., description="Brand promise perception score")
    simulated_market_adoption_score: int = Field(..., description="Simulated market adoption score")
    success_metrics_product_service: str = Field(..., description="Success metrics for product/service")
    vendor_relationship_preferences: str = Field(..., description="Vendor relationship preferences")
    competitive_differentiation_score: int = Field(..., description="Competitive differentiation score")
    channel_preferences_brand_interaction: str = Field(..., description="Channel preferences for brand interaction")

class SurveySimulation(BaseModel):
    survey_simulation: Dict[str, SurveySimulationDetails] = Field(..., description="Survey simulation data for various brands") 